{"version":3,"sources":["Components/loading.gif","Components/Header.js","Components/Movie.js","Components/MoviesContainer.js","Components/Search.js","MovieViewReducer.js","Components/MovieView.js","Reducer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","focus","className","DEFAULT_PLACEHOLDER_IMAGE","baseUrl","process","Movie","movie","poster","Poster","Type","to","imdbID","Title","alt","src","style","fontStyle","Year","MoviesContainer","loading","errorMessage","movies","search","match","useEffect","params","q","map","index","key","width","LoadingGif","withRouter","props","useState","searchValue","setSearchValue","callSearchFunction","e","preventDefault","history","push","onSubmit","value","onChange","target","type","placeholder","onClick","trim","initialState","reducer","state","action","payload","error","MovieView","useReducer","dispatch","console","log","loadMovie","id","a","async","fetch","res","json","data","Response","Error","Genre","Rated","Plot","Language","imdbRating","href","page","totalResults","App","useBottomScrollListener","length","then","response","jsonResponse","Search","path","exact","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1eea7262.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.7d02b50b.gif\";","import React from 'react'\r\n\r\nexport default function Header({ focus }) {\r\n  return (\r\n    <header className={\"App-header\" + (focus ? \" focus\" : \"\")}>\r\n      <h2 className=\"title\">Watch<span className='primary'>Today</span></h2>\r\n      <span className=\"details\">\r\n        Can not decide which movie to watch today? You are in the right place\r\n        <br></br>\r\n        <span className=\"info\">This application is only a demonstration of Umer's frontend skills with React, a JavaScript framework</span>\r\n      </span>\r\n    </header>\r\n  )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DEFAULT_PLACEHOLDER_IMAGE =\r\n  \"http://www.theprintworks.com/wp-content/themes/psBella/assets/img/film-poster-placeholder.png\";\r\n\r\nconst baseUrl = process.env.PUBLIC_URL;\r\n\r\nexport default function Movie({ movie }) {\r\n  const poster = movie.Poster === \"N/A\" ? DEFAULT_PLACEHOLDER_IMAGE : movie.Poster;\r\n  return (\r\n    <Link className={\"movie \" + (movie.Type != \"movie\" ? movie.Type : \"\")} to={baseUrl + \"/movie/\" + movie.imdbID}>\r\n      <h2 className=\"title\" >{movie.Title}</h2>\r\n      <div>\r\n        <img\r\n          alt={`The movie titled: ${movie.Title}`}\r\n          src={poster}\r\n          className='poster'\r\n        />\r\n      </div>\r\n      <p><span style={{ fontStyle: \"italic\" }}>{movie.Type}</span> {movie.Year}</p>\r\n    </Link>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport LoadingGif from './loading.gif';\r\nimport Movie from './Movie';\r\n\r\nexport default function MoviesContainer({ loading, errorMessage, movies, search, match }) {\r\n\r\n  useEffect(() => {\r\n    search(match.params.q)\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"moviesContainer\">\r\n      <div className=\"movies\">\r\n        {movies.map((movie, index) => (\r\n          <Movie key={movie.imdbID} movie={movie} />\r\n        ))}\r\n      </div>\r\n      <div className=\"info\">\r\n        {loading && !errorMessage ? (\r\n          <>\r\n            <span className=\"loading\">loading... </span>\r\n            <img width=\"50\" src={LoadingGif} alt=\"\" />\r\n          </>\r\n        ) : errorMessage ? (\r\n          <div className=\"errorMessage\">Sorry, the search could not be made because the server returned an error: {errorMessage}</div>\r\n        ) : null\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst baseUrl = process.env.PUBLIC_URL;\r\n\r\nconst Search = (props) => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const handleSearchInputChanges = (e) => {\r\n    setSearchValue(e.target.value);\r\n  }\r\n\r\n  const resetInputField = () => {\r\n    setSearchValue(\"\")\r\n  }\r\n\r\n  const callSearchFunction = (e) => {\r\n    e.preventDefault();\r\n    if (!searchValue) return;\r\n\r\n    props.history.push(baseUrl + \"/search/\" + searchValue);\r\n    props.search(searchValue);\r\n    resetInputField();\r\n  }\r\n\r\n  return (\r\n    <form className=\"search\" onSubmit={callSearchFunction}>\r\n      <input\r\n        value={searchValue}\r\n        onChange={handleSearchInputChanges}\r\n        type=\"text\"\r\n        placeholder=\"Query\"\r\n      />\r\n      <Link className=\"submitSearch\" onClick={callSearchFunction} to={\"/search/\" + searchValue.trim()}>Search</Link>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default withRouter(Search);","export const initialState = {\r\n  loading: false,\r\n  movie: null,\r\n  errorMessage: null\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOAD_MOVIE_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        errorMessage: null,\r\n        movie: null\r\n      };\r\n    case \"LOAD_MOVIE_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        movie: action.payload.movie,\r\n        errorMessage: null\r\n      };\r\n    case \"LOAD_MOVIE_FAILURE\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorMessage: action.error,\r\n        movie: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useEffect, useReducer } from 'react';\r\nimport { reducer, initialState } from '../MovieViewReducer';\r\nimport LoadingGif from './loading.gif';\r\n\r\nexport default function MovieView({ match }) {\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const { movie, errorMessage, loading } = state;\r\n  console.log(state);\r\n\r\n  useEffect(() => {\r\n    loadMovie(match.params.id);\r\n  }, []);\r\n\r\n  const loadMovie = async (id) => {\r\n    dispatch({\r\n      type: \"LOAD_MOVIE_REQUEST\"\r\n    });\r\n\r\n    try {\r\n      const res = await fetch(`https://www.omdbapi.com/?i=${id}&apikey=4a3b711b&plot=full`);\r\n      const data = await res.json();\r\n      if (data.Response === \"True\")\r\n        dispatch({\r\n          type: \"LOAD_MOVIE_SUCCESS\",\r\n          payload: { movie: data }\r\n        });\r\n      else dispatch({ type: \"LOAD_MOVIE_FAILURE\", error: data.Error });\r\n    } catch (err) {\r\n      dispatch({ type: \"LOAD_MOVIE_FAILURE\", error: \"Something went really, really wrong\" });\r\n    }\r\n  }\r\n  const { Title, Poster, Genre, Type, Year, Rated, Plot, Language, imdbRating, imdbID } = movie || {};\r\n  return (\r\n    <div className=\"movieview\">\r\n      {\r\n        loading ?\r\n          <div className=\"loading\">\r\n            <span className=\"loading\">loading... </span>\r\n            <img width=\"50\" src={LoadingGif} alt=\"\" />\r\n          </div>\r\n          : movie ? (\r\n            <div className=\"brand\">\r\n              <div className=\"poster\"><img src={Poster} alt=\"\" /></div>\r\n              <div className=\"info\">\r\n                <div className=\"title\">{Title}</div>\r\n                <span className=\"rated\">{Rated}</span>\r\n                <div className=\"info1\">\r\n                  <span style={{ fontStyle: \"italic\" }}>{Type}</span> {Year}\r\n                </div>\r\n                <br />\r\n                <div className=\"genre\">{Genre}</div>\r\n                <div className=\"language\">{Language}</div>\r\n                <div className=\"plot\">{Plot}</div>\r\n                <a className=\"imdbRating\" href={`https://www.imdb.com/title/${imdbID}`}>IMDB Rating {imdbRating}</a>\r\n              </div>\r\n            </div>) : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","export const initialState = {\r\n  loading: false,\r\n  movies: [],\r\n  errorMessage: null,\r\n  page: 0,\r\n  searchValue: \"\"\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SEARCH_MOVIES_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        errorMessage: null,\r\n        movies: []\r\n      };\r\n    case \"LOAD_MORE_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        errorMessage: null\r\n      };\r\n    case \"SEARCH_MOVIES_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        movies: action.payload.movies,\r\n        page: action.payload.page,\r\n        searchValue: action.payload.searchValue,\r\n        totalResults: action.payload.totalResults\r\n      };\r\n    case \"LOAD_MORE_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        movies: action.payload.movies,\r\n        page: action.payload.page\r\n      };\r\n    case \"SEARCH_MOVIES_FAILURE\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorMessage: action.error,\r\n        movies: [],\r\n        page: null,\r\n        searchValue: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer, useEffect } from \"react\";\n\nimport \"./App.scss\";\n\nimport Header from \"./Components/Header\";\nimport MoviesContainer from \"./Components/MoviesContainer\";\nimport Search from \"./Components/Search\";\nimport MovieView from \"./Components/MovieView\";\n\nimport { Link, BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\n\nimport { reducer, initialState } from './Reducer';\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const { movies, errorMessage, loading, searchValue, page, totalResults } = state;\n\n  const loadMore = () => {\n\n    dispatch({\n      type: \"LOAD_MORE_REQUEST\"\n    });\n\n    fetch(`https://www.omdbapi.com/?s=${searchValue.trim()}&apikey=4a3b711b&page=${page + 1}`)\n      .then(response => response.json())\n      .then(jsonResponse => {\n        if (jsonResponse.Response === \"True\") {\n          movies.push(...jsonResponse.Search);\n          dispatch({\n            type: \"LOAD_MORE_SUCCESS\",\n            payload: { movies: movies, page: page + 1 }\n          })\n        } else {\n          dispatch({\n            type: \"LOAD_MORE_FAILURE\",\n            error: jsonResponse.Error\n          });\n        }\n      });\n  }\n\n  useBottomScrollListener(() => {\n    if (searchValue && totalResults > movies.length)\n      loadMore();\n  });\n\n  const search = (searchValue) => {\n    dispatch({\n      type: \"SEARCH_MOVIES_REQUEST\"\n    });\n\n    fetch(`https://www.omdbapi.com/?s=${searchValue.trim()}&apikey=4a3b711b`)\n      .then(response => response.json())\n      .then(jsonResponse => {\n        if (jsonResponse.Response === \"True\") {\n          dispatch({\n            type: \"SEARCH_MOVIES_SUCCESS\",\n            payload: { movies: jsonResponse.Search, page: 1, searchValue, totalResults: jsonResponse.totalResults }\n          });\n        } else {\n          dispatch({\n            type: \"SEARCH_MOVIES_FAILURE\",\n            error: jsonResponse.Error\n          });\n        }\n      });\n  };\n\n  const baseUrl = process.env.PUBLIC_URL;\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path={baseUrl + \"/\"} exact render={props => (<>\n            <Header focus={true} />\n            <Search search={search} />\n          </>\n          )}></Route>\n\n          <Route path={baseUrl + \"/search/:q/:page?\"} render={props => (<>\n            <Header focus={!movies.length && !loading} />\n            <Search search={search} />\n            <MoviesContainer\n              errorMessage={errorMessage}\n              movies={movies}\n              loading={loading}\n              search={search}\n              {...props}\n              >\n            </MoviesContainer>\n          </>\n          )}></Route>\n\n          <Route path={baseUrl + \"/movie/:id\"} render={props => (<>\n            <Header focus={false} />\n            <Search search={search} />\n            <MovieView\n              {...props}\n            >\n            </MovieView>\n          </>\n          )}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}